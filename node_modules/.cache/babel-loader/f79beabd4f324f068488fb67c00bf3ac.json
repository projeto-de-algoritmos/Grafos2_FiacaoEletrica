{"ast":null,"code":"var _jsxFileName = \"/home/andre/Documentos/Grafos2_Trabalho2/src/pages/home/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Graph from \"react-graph-vis\";\nimport { Container, Formulario } from \"./styles\";\n\nfunction Dashboard(props) {\n  const [node, setNode] = useState([]);\n  const [edge, setEdge] = useState([]);\n  const [graph, setgraph] = useState({\n    nodes: [{\n      id: 1,\n      label: \"Node 1\",\n      title: \"node 1 tootip text\"\n    }, {\n      id: 2,\n      label: \"Node 2\",\n      title: \"node 2 tootip text\"\n    }, {\n      id: 3,\n      label: \"Node 3\",\n      title: \"node 3 tootip text\"\n    }, {\n      id: 4,\n      label: \"Node 4\",\n      title: \"node 4 tootip text\"\n    }, {\n      id: 5,\n      label: \"Node 5\",\n      title: \"node 5 tootip text\"\n    }],\n    edges: [{\n      from: 1,\n      to: 2\n    }, {\n      from: 1,\n      to: 3\n    }, {\n      from: 2,\n      to: 4\n    }, {\n      from: 2,\n      to: 5\n    }]\n  });\n  const options = {\n    autoResize: true,\n    height: \"100%\",\n    width: \"100%\",\n    nodes: {\n      borderWidth: 3,\n      size: 30,\n      color: {\n        border: \"#222222\",\n        background: \"#666666\"\n      },\n      font: {\n        color: \"#eeeeee\"\n      }\n    },\n    edges: {\n      color: \"lightgray\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Graph, {\n    graph: graph,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/andre/Documentos/Grafos2_Trabalho2/src/pages/home/index.js"],"names":["React","useState","useEffect","Graph","Container","Formulario","Dashboard","props","node","setNode","edge","setEdge","graph","setgraph","nodes","id","label","title","edges","from","to","options","autoResize","height","width","borderWidth","size","color","border","background","font"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,UAAtC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC;AACjCa,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,QAAhB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KADK,EAEL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,QAAhB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAFK,EAGL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,QAAhB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAHK,EAIL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,QAAhB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KAJK,EAKL;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,KAAK,EAAE,QAAhB;AAA0BC,MAAAA,KAAK,EAAE;AAAjC,KALK,CAD0B;AAQjCC,IAAAA,KAAK,EAAE,CACL;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KADK,EAEL;AAAED,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAFK,EAGL;AAAED,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAHK,EAIL;AAAED,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,EAAE,EAAE;AAAf,KAJK;AAR0B,GAAD,CAAlC;AAgBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,IADE;AAEdC,IAAAA,MAAM,EAAE,MAFM;AAGdC,IAAAA,KAAK,EAAE,MAHO;AAIdV,IAAAA,KAAK,EAAE;AACLW,MAAAA,WAAW,EAAE,CADR;AAELC,MAAAA,IAAI,EAAE,EAFD;AAGLC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,SADH;AAELC,QAAAA,UAAU,EAAE;AAFP,OAHF;AAOLC,MAAAA,IAAI,EAAE;AAAEH,QAAAA,KAAK,EAAE;AAAT;AAPD,KAJO;AAadT,IAAAA,KAAK,EAAE;AACLS,MAAAA,KAAK,EAAE;AADF;AAbO,GAAhB;AAkBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAqB,IAAA,OAAO,EAAES,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AACD,eAAef,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Graph from \"react-graph-vis\";\nimport { Container, Formulario } from \"./styles\";\n\nfunction Dashboard(props) {\n  const [node, setNode] = useState([]);\n  const [edge, setEdge] = useState([]);\n  const [graph, setgraph] = useState({\n    nodes: [\n      { id: 1, label: \"Node 1\", title: \"node 1 tootip text\" },\n      { id: 2, label: \"Node 2\", title: \"node 2 tootip text\" },\n      { id: 3, label: \"Node 3\", title: \"node 3 tootip text\" },\n      { id: 4, label: \"Node 4\", title: \"node 4 tootip text\" },\n      { id: 5, label: \"Node 5\", title: \"node 5 tootip text\" },\n    ],\n    edges: [\n      { from: 1, to: 2 },\n      { from: 1, to: 3 },\n      { from: 2, to: 4 },\n      { from: 2, to: 5 },\n    ],\n  });\n\n  const options = {\n    autoResize: true,\n    height: \"100%\",\n    width: \"100%\",\n    nodes: {\n      borderWidth: 3,\n      size: 30,\n      color: {\n        border: \"#222222\",\n        background: \"#666666\",\n      },\n      font: { color: \"#eeeeee\" },\n    },\n    edges: {\n      color: \"lightgray\",\n    },\n  };\n\n  return (\n    <Container>\n      <Graph graph={graph} options={options} />\n    </Container>\n  );\n}\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}